#!/bin/bash

# *************************************************************************************************
# mediam (Media Maid)
# https://github.com/crabouif/mediam
# *************************************************************************************************
# License: GPL 3
# Author: Pascal Fluck (PFComputing)
# *************************************************************************************************

# Save opts
BASE_OPTS="$@"

# Include common script
. ./inc/common 

display_usage() { 
	echo -e "Provide facilities to classify multimedia files as pictures or video taken by a camera. \n" 
	echo -e "Usage:\n$0 <COMMAND> [options] [args]" 
	echo -e "" 
	echo -e "COMMAND" 
	echo -e "These are common MediaM commands used in various situations:\n"
	echo -e "rename      Rename media file to a standard and sortable format %Y%m%d_%H%M%S%."
	echo -e "classify    Provide facilities to classify multimedia files as pictures or video taken by a camera."
	echo -e "prune       Prune multimedia images. The goal is to remove redundent images due to intensive shooting." 
	echo -e "            MediaM will try to recognise similar images in order of time. Then it will gather" 
	echo -e "            similar images in prune folders.\n"
	echo -e "For help of specific command type: mediam <command> --help.\n"
} 

# Parse and check command
COMMAND=$1

re="^(rename|classify|prune|face)$"
if [[ ! $COMMAND =~ $re ]]; then
	display_usage
	exit 1
fi

# Parse parameters
OPTS=$( getopt -q -o vdh -l verbose,debug,help -- "$@" )

if [[ "$OPTS" == " --" ]]; then
	display_usage
	exit 1
fi

eval set -- "$OPTS"

while true; do
	case "$1" in
        -v | --verbose )
			shift
			VERBOSE=true
			;;
        -d | --debug )
			shift
			DEBUG=true
			VERBOSE=true
			;;
        -h | --help )
			shift
			if [[ "$COMMAND" == "" ]]; then
				display_usage
				exit 1
			fi
			;;
		-- ) 
			shift
			break 
			;;
		* )
			shift
	esac
done

# Parse arguments and target files or directories
shift $(($OPTIND - 1))
SOURCE="${2%/}"
TARGET="${3%/}"

debug "SOURCE = $SOURCE"
debug "TARGET = $TARGET"
debug "COMMAND = $COMMAND"
debug "DEBUG = $DEBUG"
debug "VERBOSE = $VERBOSE"

# Import and call file of command
. ./inc/$COMMAND